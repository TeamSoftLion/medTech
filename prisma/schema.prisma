generator client {
  provider = "prisma-client-js"
}


datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  admin 
  doctor
  reception
}

enum AppointmentStatus {
  scheduled
  completed
  canceled
}

model User{
  id String @id @default(cuid())
  email String @unique
  passwordHash String 
  role Role
  firstname String 
  lastname String
  isActive Boolean @default(true)
  mustChangePassword Boolean @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  appointments Appointment[] @relation("DoctorAppointments")
  records MedicalRecord[] @relation("AuthorRecords")
}

model Patient {
  id        String   @id @default(cuid())
  firstName String
  lastName  String
  gender    String?
  phone     String?
  email     String?
  notes     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  appointments  Appointment[]
  medicalRecord MedicalRecord[]
}
model Appointment {
  id        String            @id @default(cuid())
  patient   Patient           @relation(fields: [patientId], references: [id])
  patientId String
  doctor    User              @relation("DoctorAppointments", fields: [doctorId], references: [id])
  doctorId  String
  startAt   DateTime
  endAt     DateTime
  status    AppointmentStatus @default(scheduled)
  reason    String?
  createdBy String?           // kim yaratgan (userId) - ixtiyoriy

  @@index([doctorId, startAt])
  @@index([patientId, startAt])
}

model MedicalRecord {
  id           String   @id @default(cuid())
  patient      Patient  @relation(fields: [patientId], references: [id])
  patientId    String
  author       User     @relation("AuthorRecords", fields: [authorId], references: [id])
  authorId     String
  type         String   // masalan: "diagnosis" | "treatment" | "note"
  description  String?
  prescription String?  // yozilgan dori/ko'rsatma
  createdAt    DateTime @default(now())
}